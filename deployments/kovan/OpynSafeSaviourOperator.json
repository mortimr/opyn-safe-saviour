{
  "address": "0xE4C986d61a961237468f235D64766115aEc738ed",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "opynV2Controller_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "opynV2Whitelist_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "uniswapV2Router02_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "saviourRegistry_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "whitelistState",
          "type": "uint256"
        }
      ],
      "name": "ToggleOToken",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_otoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_requiredOutputAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_safeCollateralAddress",
          "type": "address"
        }
      ],
      "name": "getOTokenAmountToApprove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_otoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getOpynPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_otoken",
          "type": "address"
        }
      ],
      "name": "isOTokenPutOption",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "oTokenSelection",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_otoken",
          "type": "address"
        }
      ],
      "name": "oTokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "opynV2Controller",
      "outputs": [
        {
          "internalType": "contract OpynV2ControllerLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "opynV2Whitelist",
      "outputs": [
        {
          "internalType": "contract OpynV2WhitelistLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_otoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_safeCollateral",
          "type": "address"
        }
      ],
      "name": "redeemAndSwapOTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saviourRegistry",
      "outputs": [
        {
          "internalType": "contract SAFESaviourRegistryLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router02",
      "outputs": [
        {
          "internalType": "contract UniswapV2Router02Like",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xefafb7c9d7af0949c446193d852ba3862fb6b57348a3fd9a71901d3b560b29f2",
  "receipt": {
    "to": null,
    "from": "0xB4410cA4B6c25102A0De8863B83A0Bc6F94f7d24",
    "contractAddress": "0xE4C986d61a961237468f235D64766115aEc738ed",
    "transactionIndex": 2,
    "gasUsed": "1233017",
    "logsBloom": "0x
    "blockHash": "0xb21243393a32c89fb0d126db9e788b4818f1c4b1eae1b69fd8947cfda0b2e0e0",
    "transactionHash": "0xefafb7c9d7af0949c446193d852ba3862fb6b57348a3fd9a71901d3b560b29f2",
    "logs": [],
    "blockNumber": 23931828,
    "cumulativeGasUsed": "1297175",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x340Ed8bFf5Be8175D30849e39cd87b06364E0Fb5",
    "0x112dBABC0723e7F4aF81D70a220617b54b7767Ae",
    "0xEC8df48269D47104dAaC4DB97F0e0B271CA2134f",
    "0xB19bc2e13Bd6BAeeE8c0D8282387221D7f9b8833"
  ],
  "solcInputHash": "4ab7740a3c4c741a16859aca93eee72c",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"opynV2Controller_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opynV2Whitelist_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapV2Router02_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saviourRegistry_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"whitelistState\",\"type\":\"uint256\"}],\"name\":\"ToggleOToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredOutputAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_safeCollateralAddress\",\"type\":\"address\"}],\"name\":\"getOTokenAmountToApprove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getOpynPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otoken\",\"type\":\"address\"}],\"name\":\"isOTokenPutOption\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oTokenSelection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otoken\",\"type\":\"address\"}],\"name\":\"oTokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opynV2Controller\",\"outputs\":[{\"internalType\":\"contract OpynV2ControllerLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opynV2Whitelist\",\"outputs\":[{\"internalType\":\"contract OpynV2WhitelistLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_otoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_safeCollateral\",\"type\":\"address\"}],\"name\":\"redeemAndSwapOTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saviourRegistry\",\"outputs\":[{\"internalType\":\"contract SAFESaviourRegistryLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router02\",\"outputs\":[{\"internalType\":\"contract UniswapV2Router02Like\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/saviours/OpynSafeSaviourOperator.sol\":\"OpynSafeSaviourOperator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ERC20Like.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\nabstract contract ERC20Like {\\n    uint256 public totalSupply;\\n\\n    function balanceOf(address guy) public virtual returns (uint256);\\n\\n    function approve(address guy, uint256 wad) public virtual returns (bool);\\n\\n    function transfer(address dst, uint256 wad) public virtual returns (bool);\\n\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 wad\\n    ) public virtual returns (bool);\\n}\\n\",\"keccak256\":\"0x8081233eac98e09db40d13bd2c010944dcd6d4289b2e90710fa1e88cc7b1bf60\",\"license\":\"MIT\"},\"contracts/interfaces/OpynV2ControllerLike.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\npragma experimental ABIEncoderV2;\\n\\nenum ActionType {\\n    OpenVault,\\n    MintShortOption,\\n    BurnShortOption,\\n    DepositLongOption,\\n    WithdrawLongOption,\\n    DepositCollateral,\\n    WithdrawCollateral,\\n    SettleVault,\\n    Redeem,\\n    Call\\n}\\n\\nstruct ActionArgs {\\n    ActionType actionType;\\n    address owner;\\n    address secondAddress;\\n    address asset;\\n    uint256 vaultId;\\n    uint256 amount;\\n    uint256 index;\\n    bytes data;\\n}\\n\\nabstract contract OpynV2ControllerLike {\\n    function operate(ActionArgs[] calldata _actions) external virtual;\\n\\n    function getPayout(address _otoken, uint256 _amount) public view virtual returns (uint256);\\n}\\n\",\"keccak256\":\"0xd3a33dfe273e841233898bc995db5183cad55dcbe16eb1bd82606735640fc6f1\",\"license\":\"MIT\"},\"contracts/interfaces/OpynV2OTokenLike.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\nabstract contract OpynV2OTokenLike {\\n    function getOtokenDetails()\\n        external\\n        view\\n        virtual\\n        returns (\\n            address,\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            bool\\n        );\\n}\\n\",\"keccak256\":\"0x31640b1ae94aff696fdf6c79b5c3189e8d5cf1564e432540ffc536b778dcc889\",\"license\":\"MIT\"},\"contracts/interfaces/OpynV2WhitelistLike.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\nabstract contract OpynV2WhitelistLike {\\n    function isWhitelistedOtoken(address _otoken) external view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0xf70a8e96892a3282e545eb56bd0e28249a271e846533325aa9e8424edec64fee\",\"license\":\"MIT\"},\"contracts/interfaces/SAFESaviourRegistryLike.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\nabstract contract SAFESaviourRegistryLike {\\n    mapping(address => uint256) public authorizedAccounts;\\n\\n    function markSave(bytes32 collateralType, address safeHandler) external virtual;\\n}\\n\",\"keccak256\":\"0x08de61f2b8d891c2f7358b985655a17f4697a6fa034f5cad20b4c252e742662a\",\"license\":\"MIT\"},\"contracts/interfaces/UniswapV2Router02Like.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\nabstract contract UniswapV2Router02Like {\\n    function getAmountsIn(uint256 amountOut, address[] memory path)\\n        public\\n        view\\n        virtual\\n        returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external virtual returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x5fca7e91ba9cdaf13539395d0727694603c94eac977b95de23698b1573199d7d\",\"license\":\"MIT\"},\"contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\ncontract SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, 'SafeMath: addition overflow');\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, 'SafeMath: subtraction overflow');\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, 'SafeMath: multiplication overflow');\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, 'SafeMath: division by zero');\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, 'SafeMath: modulo by zero');\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x3c912e03c883781b72a7052a2775decf9b96616cad46fc1f38683cd330450179\",\"license\":\"MIT\"},\"contracts/saviours/OpynSafeSaviourOperator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.7 <=0.7.6;\\n\\npragma experimental ABIEncoderV2;\\n\\nimport '../interfaces/OpynV2OTokenLike.sol';\\nimport '../interfaces/OpynV2ControllerLike.sol';\\nimport '../interfaces/OpynV2WhitelistLike.sol';\\nimport '../interfaces/UniswapV2Router02Like.sol';\\nimport '../interfaces/SAFESaviourRegistryLike.sol';\\nimport '../interfaces/ERC20Like.sol';\\nimport '../math/SafeMath.sol';\\n\\ncontract OpynSafeSaviourOperator is SafeMath {\\n    // The Opyn v2 Controller to interact with oTokens\\n    OpynV2ControllerLike public opynV2Controller;\\n    // The Opyn v2 Whitelist to check oTokens' validity\\n    OpynV2WhitelistLike public opynV2Whitelist;\\n    // The Uniswap v2 router 02 to swap collaterals\\n    UniswapV2Router02Like public uniswapV2Router02;\\n    // oToken type selected by each SAFE\\n    mapping(address => address) public oTokenSelection;\\n    // Entity whitelisting allowed saviours\\n    SAFESaviourRegistryLike public saviourRegistry;\\n\\n    // Events\\n    event ToggleOToken(address oToken, uint256 whitelistState);\\n\\n    constructor(\\n        address opynV2Controller_,\\n        address opynV2Whitelist_,\\n        address uniswapV2Router02_,\\n        address saviourRegistry_\\n    ) {\\n        require(opynV2Controller_ != address(0), 'OpynSafeSaviour/null-opyn-v2-controller');\\n        require(opynV2Whitelist_ != address(0), 'OpynSafeSaviour/null-opyn-v2-whitelist');\\n        require(uniswapV2Router02_ != address(0), 'OpynSafeSaviour/null-uniswap-v2-router02');\\n        require(saviourRegistry_ != address(0), 'OpynSafeSaviour/null-saviour-registry');\\n\\n        opynV2Controller = OpynV2ControllerLike(opynV2Controller_);\\n        opynV2Whitelist = OpynV2WhitelistLike(opynV2Whitelist_);\\n        uniswapV2Router02 = UniswapV2Router02Like(uniswapV2Router02_);\\n        saviourRegistry = SAFESaviourRegistryLike(saviourRegistry_);\\n    }\\n\\n    function isOTokenPutOption(address _otoken) external view returns (bool) {\\n        (, , , , , bool isPut) = OpynV2OTokenLike(_otoken).getOtokenDetails();\\n        return isPut;\\n    }\\n\\n    function getOpynPayout(address _otoken, uint256 _amount) external view returns (uint256) {\\n        return opynV2Controller.getPayout(_otoken, _amount);\\n    }\\n\\n    modifier isSaviourRegistryAuthorized() {\\n        require(saviourRegistry.authorizedAccounts(msg.sender) == 1, 'OpynSafeSaviour/account-not-authorized');\\n        _;\\n    }\\n\\n    function redeemAndSwapOTokens(\\n        address _otoken,\\n        uint256 _amountIn,\\n        uint256 _amountOut,\\n        address _safeCollateral\\n    ) external {\\n        ERC20Like(_otoken).transferFrom(msg.sender, address(this), _amountIn);\\n\\n        (address oTokenCollateral, , , , , ) = OpynV2OTokenLike(_otoken).getOtokenDetails();\\n\\n        uint256 redeemedOTokenCollateral;\\n\\n        {\\n            // Opyn Redeem\\n\\n            uint256 preRedeemBalance = ERC20Like(oTokenCollateral).balanceOf(address(this));\\n\\n            // Build Opyn Action\\n            ActionArgs[] memory redeemAction = new ActionArgs[](1);\\n            redeemAction[0].actionType = ActionType.Redeem;\\n            redeemAction[0].owner = address(0);\\n            redeemAction[0].secondAddress = address(this);\\n            redeemAction[0].asset = _otoken;\\n            redeemAction[0].vaultId = 0;\\n            redeemAction[0].amount = _amountIn;\\n\\n            // Trigger oToken collateral redeem\\n            opynV2Controller.operate(redeemAction);\\n\\n            redeemedOTokenCollateral = sub(ERC20Like(oTokenCollateral).balanceOf(address(this)), preRedeemBalance);\\n        }\\n\\n        uint256 swappedSafeCollateral;\\n\\n        {\\n            // Uniswap swap\\n\\n            // Retrieve pre-swap WETH balance\\n            uint256 safeCollateralBalance = ERC20Like(_safeCollateral).balanceOf(address(this));\\n\\n            // Path argument for the uniswap router\\n            address[] memory path = new address[](2);\\n            path[0] = oTokenCollateral;\\n            path[1] = _safeCollateral;\\n\\n            ERC20Like(oTokenCollateral).approve(address(uniswapV2Router02), redeemedOTokenCollateral);\\n\\n            uniswapV2Router02.swapExactTokensForTokens(\\n                redeemedOTokenCollateral,\\n                _amountOut,\\n                path,\\n                address(this),\\n                block.timestamp\\n            );\\n\\n            // Retrieve post-swap WETH balance. Would overflow and throw if balance decreased\\n            swappedSafeCollateral = sub(ERC20Like(_safeCollateral).balanceOf(address(this)), safeCollateralBalance);\\n        }\\n\\n        ERC20Like(_safeCollateral).transfer(msg.sender, swappedSafeCollateral);\\n    }\\n\\n    function oTokenWhitelist(address _otoken) external view returns (bool) {\\n        return opynV2Whitelist.isWhitelistedOtoken(_otoken);\\n    }\\n\\n    function getOTokenAmountToApprove(\\n        address _otoken,\\n        uint256 _requiredOutputAmount,\\n        address _safeCollateralAddress\\n    ) external view returns (uint256) {\\n        (address oTokenCollateralAddress, , , , , ) = OpynV2OTokenLike(_otoken).getOtokenDetails();\\n\\n        address[] memory path = new address[](2);\\n        path[0] = oTokenCollateralAddress;\\n        path[1] = _safeCollateralAddress;\\n\\n        uint256 oTokenCollateralAmountRequired = uniswapV2Router02.getAmountsIn(_requiredOutputAmount, path)[0];\\n\\n        uint256 payoutPerToken = opynV2Controller.getPayout(_otoken, 1);\\n\\n        require(payoutPerToken > 0, 'OpynSafeSaviour/no-collateral-to-redeem');\\n\\n        uint256 amountToApprove = div(oTokenCollateralAmountRequired, payoutPerToken);\\n\\n        // Integer division rounds to zero, better ensure we get at least the required amount\\n        if (mul(amountToApprove, payoutPerToken) < _requiredOutputAmount) {\\n            amountToApprove += 1;\\n        }\\n\\n        return amountToApprove;\\n    }\\n}\\n\",\"keccak256\":\"0xe749b3af350b0911702cfddfdde63f5af24844c6e92ff0331c10d8dee47f04d2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200167438038062001674833981016040819052620000349162000152565b6001600160a01b038416620000665760405162461bcd60e51b81526004016200005d90620001f3565b60405180910390fd5b6001600160a01b0383166200008f5760405162461bcd60e51b81526004016200005d9062000282565b6001600160a01b038216620000b85760405162461bcd60e51b81526004016200005d906200023a565b6001600160a01b038116620000e15760405162461bcd60e51b81526004016200005d90620001ae565b600080546001600160a01b039586166001600160a01b0319918216179091556001805494861694821694909417909355600280549285169284169290921790915560048054919093169116179055620002c8565b80516001600160a01b03811681146200014d57600080fd5b919050565b6000806000806080858703121562000168578384fd5b620001738562000135565b9350620001836020860162000135565b9250620001936040860162000135565b9150620001a36060860162000135565b905092959194509250565b60208082526025908201527f4f70796e53616665536176696f75722f6e756c6c2d736176696f75722d726567604082015264697374727960d81b606082015260800190565b60208082526027908201527f4f70796e53616665536176696f75722f6e756c6c2d6f70796e2d76322d636f6e6040820152663a3937b63632b960c91b606082015260800190565b60208082526028908201527f4f70796e53616665536176696f75722f6e756c6c2d756e69737761702d76322d6040820152673937baba32b9181960c11b606082015260800190565b60208082526026908201527f4f70796e53616665536176696f75722f6e756c6c2d6f70796e2d76322d7768696040820152651d195b1a5cdd60d21b606082015260800190565b61139c80620002d86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ac017c7e11610066578063ac017c7e14610104578063aea1a4a714610124578063d8af506414610139578063d951e15a1461014c578063dd604691146101545761009e565b8063097ab423146100a35780633a7685eb146100cc57806364ec7e00146100ec5780637354be57146100f4578063a7c6402c146100fc575b600080fd5b6100b66100b1366004610e94565b610167565b6040516100c3919061114e565b60405180910390f35b6100df6100da366004610e94565b610182565b6040516100c39190611275565b6100b661020b565b6100b661021a565b6100b6610229565b610117610112366004610f1e565b610238565b6040516100c391906112c7565b610137610132366004610f8a565b6102c4565b005b610117610147366004610f49565b610937565b6100b6610bc7565b6100df610162366004610e94565b610bd6565b6003602052600090815260409020546001600160a01b031681565b6001546040516302328d7360e31b81526000916001600160a01b0316906311946b98906101b390859060040161114e565b60206040518083038186803b1580156101cb57600080fd5b505afa1580156101df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102039190611081565b90505b919050565b6001546001600160a01b031681565b6000546001600160a01b031681565b6002546001600160a01b031681565b6000805460405163565eea1960e01b81526001600160a01b039091169063565eea199061026b9086908690600401611186565b60206040518083038186803b15801561028357600080fd5b505afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb919061109b565b90505b92915050565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906102f490339030908890600401611162565b602060405180830381600087803b15801561030e57600080fd5b505af1158015610322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103469190611081565b506000846001600160a01b031663af0968fc6040518163ffffffff1660e01b815260040160c06040518083038186803b15801561038257600080fd5b505afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610eb0565b50505050509050600080826001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016103f0919061114e565b602060405180830381600087803b15801561040a57600080fd5b505af115801561041e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610442919061109b565b60408051600180825281830190925291925060009190816020015b610465610e23565b81526020019060019003908161045d57905050905060088160008151811061048957fe5b60200260200101516000019060098111156104a057fe5b908160098111156104ad57fe5b815250506000816000815181106104c057fe5b6020026020010151602001906001600160a01b031690816001600160a01b03168152505030816000815181106104f257fe5b6020026020010151604001906001600160a01b031690816001600160a01b031681525050878160008151811061052457fe5b6020026020010151606001906001600160a01b031690816001600160a01b03168152505060008160008151811061055757fe5b60200260200101516080018181525050868160008151811061057557fe5b602090810291909101015160a00152600054604051635b0bf86360e11b81526001600160a01b039091169063b617f0c6906105b490849060040161119f565b600060405180830381600087803b1580156105ce57600080fd5b505af11580156105e2573d6000803e3d6000fd5b50506040516370a0823160e01b815261066e92506001600160a01b03871691506370a082319061061690309060040161114e565b602060405180830381600087803b15801561063057600080fd5b505af1158015610644573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610668919061109b565b83610c4a565b92505050600080846001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016106a1919061114e565b602060405180830381600087803b1580156106bb57600080fd5b505af11580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f3919061109b565b6040805160028082526060820183529293506000929091602083019080368337019050509050848160008151811061072757fe5b60200260200101906001600160a01b031690816001600160a01b031681525050858160018151811061075557fe5b6001600160a01b03928316602091820292909201015260025460405163095ea7b360e01b81528783169263095ea7b392610796929116908890600401611186565b602060405180830381600087803b1580156107b057600080fd5b505af11580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190611081565b506002546040516338ed173960e01b81526001600160a01b03909116906338ed1739906108219087908b908690309042906004016112f1565b600060405180830381600087803b15801561083b57600080fd5b505af115801561084f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108779190810190610fd3565b506040516370a0823160e01b81526108a8906001600160a01b038816906370a082319061061690309060040161114e565b60405163a9059cbb60e01b81529093506001600160a01b038716925063a9059cbb91506108db9033908590600401611186565b602060405180830381600087803b1580156108f557600080fd5b505af1158015610909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092d9190611081565b5050505050505050565b600080846001600160a01b031663af0968fc6040518163ffffffff1660e01b815260040160c06040518083038186803b15801561097357600080fd5b505afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190610eb0565b505050505090506000600267ffffffffffffffff811180156109cc57600080fd5b506040519080825280602002602001820160405280156109f6578160200160208202803683370190505b5090508181600081518110610a0757fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508381600181518110610a3557fe5b6001600160a01b0392831660209182029290920101526002546040516307c0329d60e21b81526000929190911690631f00ca7490610a7990899086906004016112d0565b60006040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610acd9190810190610fd3565b600081518110610ad957fe5b60209081029190910101516000805460405163565eea1960e01b815292935090916001600160a01b039091169063565eea1990610b1d908b90600190600401611186565b60206040518083038186803b158015610b3557600080fd5b505afa158015610b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d919061109b565b905060008111610b985760405162461bcd60e51b8152600401610b8f90611280565b60405180910390fd5b6000610ba48383610c8c565b905087610bb18284610cce565b1015610bbb576001015b98975050505050505050565b6004546001600160a01b031681565b600080826001600160a01b031663af0968fc6040518163ffffffff1660e01b815260040160c06040518083038186803b158015610c1257600080fd5b505afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190610eb0565b60006102bb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610d27565b60006102bb83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610dbe565b600082610cdd575060006102be565b82820282848281610cea57fe5b04146102bb5760405162461bcd60e51b81526004018080602001828103825260218152602001806113466021913960400191505060405180910390fd5b60008184841115610db65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d7b578181015183820152602001610d63565b50505050905090810190601f168015610da85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610e0d5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d7b578181015183820152602001610d63565b506000838581610e1957fe5b0495945050505050565b604080516101008101909152806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b8051801515811461020657600080fd5b600060208284031215610ea5578081fd5b81356102bb8161132d565b60008060008060008060c08789031215610ec8578182fd5b8651610ed38161132d565b6020880151909650610ee48161132d565b6040880151909550610ef58161132d565b6060880151608089015191955093509150610f1260a08801610e84565b90509295509295509295565b60008060408385031215610f30578182fd5b8235610f3b8161132d565b946020939093013593505050565b600080600060608486031215610f5d578283fd5b8335610f688161132d565b9250602084013591506040840135610f7f8161132d565b809150509250925092565b60008060008060808587031215610f9f578384fd5b8435610faa8161132d565b935060208501359250604085013591506060850135610fc88161132d565b939692955090935050565b60006020808385031215610fe5578182fd5b825167ffffffffffffffff80821115610ffc578384fd5b818501915085601f83011261100f578384fd5b81518181111561101b57fe5b8381026040518582820101818110858211171561103457fe5b604052828152858101935084860182860187018a1015611052578788fd5b8795505b83861015611074578051855260019590950194938601938601611056565b5098975050505050505050565b600060208284031215611092578081fd5b6102bb82610e84565b6000602082840312156110ac578081fd5b5051919050565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156110f85781516001600160a01b0316875295820195908201906001016110d3565b509495945050505050565b60008151808452815b818110156111285760208185018101518683018201520161110c565b818111156111395782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561126757603f1989840301855281516101008151600a81106111e557fe5b8552818901516111f78a8701826110b3565b5087820151611208898701826110b3565b5060608083015161121b828801826110b3565b50506080828101519086015260a0808301519086015260c0808301519086015260e09182015191850181905261125381860183611103565b9689019694505050908601906001016111c3565b509098975050505050505050565b901515815260200190565b60208082526027908201527f4f70796e53616665536176696f75722f6e6f2d636f6c6c61746572616c2d746f6040820152662d72656465656d60c81b606082015260800190565b90815260200190565b6000838252604060208301526112e960408301846110c0565b949350505050565b600086825285602083015260a0604083015261131060a08301866110c0565b6001600160a01b0394909416606083015250608001529392505050565b6001600160a01b038116811461134257600080fd5b5056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220644e32d96a234f7902e827406ae6d262c63cb1446aadb2f06f75a53066889e5a64736f6c63430007060033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2985,
        "contract": "contracts/saviours/OpynSafeSaviourOperator.sol:OpynSafeSaviourOperator",
        "label": "opynV2Controller",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(OpynV2ControllerLike)1178"
      },
      {
        "astId": 2987,
        "contract": "contracts/saviours/OpynSafeSaviourOperator.sol:OpynSafeSaviourOperator",
        "label": "opynV2Whitelist",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(OpynV2WhitelistLike)1206"
      },
      {
        "astId": 2989,
        "contract": "contracts/saviours/OpynSafeSaviourOperator.sol:OpynSafeSaviourOperator",
        "label": "uniswapV2Router02",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(UniswapV2Router02Like)1505"
      },
      {
        "astId": 2993,
        "contract": "contracts/saviours/OpynSafeSaviourOperator.sol:OpynSafeSaviourOperator",
        "label": "oTokenSelection",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2995,
        "contract": "contracts/saviours/OpynSafeSaviourOperator.sol:OpynSafeSaviourOperator",
        "label": "saviourRegistry",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(SAFESaviourRegistryLike)1316"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(OpynV2ControllerLike)1178": {
        "encoding": "inplace",
        "label": "contract OpynV2ControllerLike",
        "numberOfBytes": "20"
      },
      "t_contract(OpynV2WhitelistLike)1206": {
        "encoding": "inplace",
        "label": "contract OpynV2WhitelistLike",
        "numberOfBytes": "20"
      },
      "t_contract(SAFESaviourRegistryLike)1316": {
        "encoding": "inplace",
        "label": "contract SAFESaviourRegistryLike",
        "numberOfBytes": "20"
      },
      "t_contract(UniswapV2Router02Like)1505": {
        "encoding": "inplace",
        "label": "contract UniswapV2Router02Like",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}